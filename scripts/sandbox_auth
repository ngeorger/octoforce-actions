#!/bin/bash

YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE_BOLD='\033[1;94m'
COLOR_RESET='\033[0m'
BRANCH_NAME=`git rev-parse --abbrev-ref HEAD`

if [[ $noDevAuth = true ]]; then
    echo "===> Skipping SFDC dev org authentication."
else
    echo
    read -p "Enter alias for dev sandbox (default: ${BRANCH_NAME}) " DEV_ALIAS
    if [ -z $DEV_ALIAS ]
    then
        DEV_ALIAS=$BRANCH_NAME
    fi
    sfdx force:auth:web:login -a $DEV_ALIAS -r https://test.salesforce.com
    PID=$!
    wait $PID
fi

echo
if [[ ! -f .env ]]
then
    printf "\nERROR: .env not found in root of project.  .enc file not generated\n"
    echo "Add a valid .env file to the root of your project and re-run the sandbox_auth script to generate a UAT login file."
    exit 1
fi

echo
read -p "Enter alias for uat sandbox (default: ${BRANCH_NAME}-uat) " UAT_ALIAS
if [ -z $UAT_ALIAS ]
then
    UAT_ALIAS=${BRANCH_NAME}-uat
fi
if [[ $noUatAuth ]]; then
    echo "===> Skipping SFDC uat org authentication."
else
    sfdx force:auth:web:login -a $UAT_ALIAS -r https://test.salesforce.com
    PID=$!
    wait $PID
fi

echo "===> Generating encrypted login URL ... "
source .env
ORG_INFO="$(sfdx force:org:display -u $UAT_ALIAS --verbose 2>/dev/null)"
LOGIN_URL=$(echo "$ORG_INFO" | awk -F "Sfdx Auth Url" '{print $2}' | xargs)
LOGIN_URL_FILE=auth/sandbox-login-url-${BRANCH_NAME}-uat.txt
echo ${LOGIN_URL} > ${LOGIN_URL_FILE}
openssl enc -aes-256-cbc -k "${SANDBOX_URL_ENCRYPTION_KEY}" -in ${LOGIN_URL_FILE} -out ${LOGIN_URL_FILE}.enc -md sha256
git add ${LOGIN_URL_FILE}.enc
echo -e "Encrypted login URL has been staged and stored in: ${GREEN}${LOGIN_URL_FILE}.enc${COLOR_RESET}\n"
